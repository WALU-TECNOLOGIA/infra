apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-app
  template:
    metadata:
      labels:
        app: frontend-app
        project: walu
        env: homolog
        emp: frontend-app
    spec:
      imagePullSecrets:
        - name: gcr-json-key
      containers:
        - name: frontend-app-nginx
          image: us-central1-docker.pkg.dev/main-design-445120-f5/walu/frontend:4
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "30Mi"
              cpu: "20m"
            limits:
              memory: "128Mi"
              cpu: "250m"
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 80
          #   initialDelaySeconds: 10
          #   periodSeconds: 60
          #   failureThreshold: 3
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 80
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   failureThreshold: 3

---

apiVersion: v1
kind: Service
metadata:
  name: frontend-app-service
spec:
  selector:
    app: frontend-app
  ports:
    - port: 80
      targetPort: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-app-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-cloudflare
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - frontend.expressopassagens.com.br
      secretName: frontend-app-tls
  rules:
    - host: frontend.expressopassagens.com.br
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-app-service
                port:
                  number: 80